[tool.poetry]
name = "geo-bench-experiments"
version = "0.0.1"
description = ""
authors = ["ATG Vision <atg-vision@servicenow.com>"]
packages = [
    { include = "geobench_exp" }
]

[tool.poetry.dependencies]
python = ">=3.9.0,<3.12"
segmentation-models-pytorch = { git = "https://github.com/qubvel/segmentation_models.pytorch.git", branch = "master"}
pandas = "^1.5.3"
scipy = "1.10.1"
geo-bench = { git = "https://github.com/ServiceNow/geo-bench.git", rev = "main"}
fastapi = ">=0.80"
torchgeo = { git = "https://github.com/microsoft/torchgeo.git", rev = "main"}
torchvision = "0.13.0"
torchmetrics = "0.11.1"
torch = ">=1.12.0"
"ruamel.yaml" = "0.17.21"
h5py = "3.8.0"
wandb = "0.13.10"
pre-commit = "^3.0.4"
seaborn = "^0.12.2"
ipyplot = "^1.1.1"
ipyleaflet = "^0.17.2"
pytest-xdist = "^3.2.1"


[tool.poetry.dev-dependencies]
black = "22.3.0"
pytest = "7.1.2"
pytest-cov = "3.0.0"
isort = "5.10.1"
colorama = "0.4.4"
flake8 = "4.0.1"
pydocstyle = "6.1.1"

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
line_length = 120

[tool.flake8]
max-line-length = 120
max-complexity = 23

[tool.mypy]
ignore_missing_imports = true
show_error_codes = true
exclude = "(docs|data)/"

[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
filterwarnings = [
  "ignore::PossibleUserWarning",
]

[tool.poetry.scripts]
geobench_exp-expgen = "geobench_exp.experiment.experiment_generator:start"
geobench_exp-trainer = "geobench_exp.torch_toolbox.trainer:start"
geobench_exp-sweep-trainer = "geobench_exp.torch_toolbox.sweep_trainer:start"
geobench_exp-toolkit = "toolkit.dispatch_toolkit:start"